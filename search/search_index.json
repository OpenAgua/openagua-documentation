{
    "docs": [
        {
            "location": "/",
            "text": "Overview\n\u00b6\n\n\nOpenAgua is a web-based application for modeling water systems for water resources planning and management. It aims to help develop insights to complex water issues in a collaborative computing environment. See a \n5-minute demo\n[TO-DO] for a brief overview. OpenAgua is built by \na dedicated team\n of developers, water experts, and visionary funders, and is based on the Hydra Shared Software Platform, an open source suite of tools for building network models.\n\n\nKey Innovations\n\u00b6\n\n\nThe key innovations of OpenAgua over existing water system modeling platforms stem from its use of web technologies, which existing similar platforms lack. Web technologies enable:\n\n\n\n\nCloud-based high-speed computing\n\n\nCollaboration/sharing in modeling and scenario analysis\n\n\nEasy continual improvement through the open source development model and widely-used \ncore technologies\n.\n\n\nInteroperability between other web apps.\n\n\n\n\nAdditionally, OpenAgua explicitly uses economic optimization by default, while also allowing a traditional similation approach.\n\n\nAvailability\n\u00b6\n\n\nOpenAgua may be either used online at \nwww.openagua.org\n, or downloaded (for free) \nfrom GitHub\n for use on a desktop or local server. OpenAgua.org enables ready-to-go modeling, with no setup required, whereas the downloadable version is mostly free and customizable (some advanced features require a license; these are disabled by default). In all cases, we offer paid support for both modeling and custom installation.\n\n\nMain Features\n\u00b6\n\n\nWater system modelling\n\n\nOpenAgua uses the standard water system modeling techniques to help understand complex, real-world water management challenges. Three generic approaches to modeling are supported. First, a hydroeconomic modeling approach with perfect foresight (of hydrologic conditions, water demands, etc.) can be used to maximize the total benefit derived from system operations. Second, the first approach can be modified by using imperfect foresight instead of perfect foresight. Finally, a traditional rule-based simulation approach can be used, whereby no foresight is assumed. (\nNote\n: Currently, only the first approach is implemented, though the latter two are planned.). Furthermore, in the future users will be able to use their own custom model, but still use OpenAgua to interact with their data and run their model.\n\n\nRead more about the default \nwater allocation logic\n, and see the \nlist of publications\n.\n\n\nAdvanced scenario builder\n\n\nIn order to adequately asses several decision frameworks, aside from the baseline scenario, OpenAgua has the feature of constructing scenarios. The user will be able to incorporate a mix of potential uncertainties and make projections in a specified time frame. By implementing scenarios, the user\u2019s project will developed a more robust and deep analysis. Evaluation, identification and establishment of the best strategies into potential plans will ensure the user to select the best future projection for water planning.\n\n\nLearn more in the \nscenario builder demo\n, the \nuser guide\n, or in the \nscenario builder tutorial\n.\n\n\nStandardized data organization\n\n\nAll data of OpenAgua is organized using \nHydra Platform\n, a data representation layer and web server for the remote management of networks and data. By using this server, OpenAgua can store and process data on a web based service, it is important to mention that OpenAgua and Hydra are both implemented in Python.\n\n\nAdvanced analytical tools\n\n\nOpenAgua is packed with a suite of modern visualization tools, including graphs, charts and maps, some of which are interactive. By default, OpenAgua uses Plotly for creating charts (see some \nPlotly examples\n). Since no single platform can meet all user needs, users can also either download data for offline analysis or connect directly to their data from other data analysis platforms, such as R or Jupyter Notebook.\n\n\nCollaborative modeling and scenario analysis\n\n\nReal-time interaction, remote collaborations and web interface communication methods are gradually becoming more common.  OpenAgua\u2019s platform is designed to target these communication approach. With OpenAgua, multiple users can share and work in one or more networks.  These feature provide a flexible and transparent tool for water managers, stakeholders, citizens, researchers etc. Moreover, different levels of access can be assigned to the networks, this ensures developers to allow collaborators certain privileges such as edit or just read. With this feature, users will get involved and be potential contributors to other existing projects. Furthermore, they will be able to find popular and trending or starred projects.\n\n\nFlexible computing\n\n\nFlexible computing is another essential part of OpenAgua. Based on Internet-connected servers, OpenAgua may be downloaded/installed locally or used directly online at \nOpenAgua web page\n to leverage the power of cloud computing. This enables dynamism, scalability and plasticity to users\u2019 projects.\n\n\nSecurity\n\n\nStandard website data security best practices ensure that your data is protected. OpenAgua has employed a tiered ownership system. The user is able to have restrictions and control who has access to your networks and projects as well as the level of permission they have\n\n\nOpen Source\n\n\nThe OpenAgua software is open source and mostly free (some optional functions require a license). Open Source software lie on the practice of granting wide range of rights to users. OpenAgua is determined to engage innovation and development throughout the contributions of water management social figures. Benefits on letting actors of knowledge and learning, to compute processes and products, are sources of innovation on the water field.\n\n\nThe fact that users\u2019 needs and approaches to target problems are in constant change, open source softwares enables the opportunity to evolve by the constant developing of prototype code innovations. For instance, the user\u2019s community of OpenAgua can freely make improvements and innovate codes on the platform or in their networks. The source code of OpenAgua is written in Python and it can be checked out on GitHub.\n\n\nWhile the main functionality of OpenAgua is free, some additional useful features require a license to use. These features are disabled by default, but can be enabled, and are available in the paid version of OpenAgua.org.\n\n\nCore Technologies\n\u00b6\n\n\nCore technologies used to configure OpenAgua are a mix of open source libraries. This will enable the platform to be in constant improvement and evolution. We thank the thousands of developers out there for all of these!\n\n\nData Management\n\n\nTo start and as mention above, data management in OpenAgua is built on \nHydra Platform\n a network-based data management platform.\n\n\nWeb stack (front-end and back-end)\n\n\nLike any interactive, data-driven web-based application, OpenAgua uses a mix of front-end (client) and back-end (server) technologies, with data processing occuring both client-side and server-side. The front-end user interface is developed with \nBootstrap\n, one of the most widely-used front-end web application frameworks, combined with custom HTML, CSS, and JavaScript. Many JavaScript libraries are used for website interactivity, including \njQuery\n, \nLodash\n, and others.\n\n\nThe back-end is built with \nFlask\n, a \"microframework for Python based on Werkzeug, Jinja 2 and good intentions\". This means that server-side website actions are written in Python, enabling easy development. Server-side work includes serving individual webpages and interactions with Hydra Platform, among other various functions. Numerous Python packages are used for server-side data processing.\n\n\nModeling\n\n\nThe default hydroeconomic model used by OpenAgua is written using \nPyomo\n, a Python package used to formulate and solve optimization models. \nGLPK\n is the linear programming solver used by the default hydroeconomic model.",
            "title": "About"
        },
        {
            "location": "/#overview",
            "text": "OpenAgua is a web-based application for modeling water systems for water resources planning and management. It aims to help develop insights to complex water issues in a collaborative computing environment. See a  5-minute demo [TO-DO] for a brief overview. OpenAgua is built by  a dedicated team  of developers, water experts, and visionary funders, and is based on the Hydra Shared Software Platform, an open source suite of tools for building network models.",
            "title": "Overview"
        },
        {
            "location": "/#key-innovations",
            "text": "The key innovations of OpenAgua over existing water system modeling platforms stem from its use of web technologies, which existing similar platforms lack. Web technologies enable:   Cloud-based high-speed computing  Collaboration/sharing in modeling and scenario analysis  Easy continual improvement through the open source development model and widely-used  core technologies .  Interoperability between other web apps.   Additionally, OpenAgua explicitly uses economic optimization by default, while also allowing a traditional similation approach.",
            "title": "Key Innovations"
        },
        {
            "location": "/#availability",
            "text": "OpenAgua may be either used online at  www.openagua.org , or downloaded (for free)  from GitHub  for use on a desktop or local server. OpenAgua.org enables ready-to-go modeling, with no setup required, whereas the downloadable version is mostly free and customizable (some advanced features require a license; these are disabled by default). In all cases, we offer paid support for both modeling and custom installation.",
            "title": "Availability"
        },
        {
            "location": "/#main-features",
            "text": "Water system modelling  OpenAgua uses the standard water system modeling techniques to help understand complex, real-world water management challenges. Three generic approaches to modeling are supported. First, a hydroeconomic modeling approach with perfect foresight (of hydrologic conditions, water demands, etc.) can be used to maximize the total benefit derived from system operations. Second, the first approach can be modified by using imperfect foresight instead of perfect foresight. Finally, a traditional rule-based simulation approach can be used, whereby no foresight is assumed. ( Note : Currently, only the first approach is implemented, though the latter two are planned.). Furthermore, in the future users will be able to use their own custom model, but still use OpenAgua to interact with their data and run their model.  Read more about the default  water allocation logic , and see the  list of publications .  Advanced scenario builder  In order to adequately asses several decision frameworks, aside from the baseline scenario, OpenAgua has the feature of constructing scenarios. The user will be able to incorporate a mix of potential uncertainties and make projections in a specified time frame. By implementing scenarios, the user\u2019s project will developed a more robust and deep analysis. Evaluation, identification and establishment of the best strategies into potential plans will ensure the user to select the best future projection for water planning.  Learn more in the  scenario builder demo , the  user guide , or in the  scenario builder tutorial .  Standardized data organization  All data of OpenAgua is organized using  Hydra Platform , a data representation layer and web server for the remote management of networks and data. By using this server, OpenAgua can store and process data on a web based service, it is important to mention that OpenAgua and Hydra are both implemented in Python.  Advanced analytical tools  OpenAgua is packed with a suite of modern visualization tools, including graphs, charts and maps, some of which are interactive. By default, OpenAgua uses Plotly for creating charts (see some  Plotly examples ). Since no single platform can meet all user needs, users can also either download data for offline analysis or connect directly to their data from other data analysis platforms, such as R or Jupyter Notebook.  Collaborative modeling and scenario analysis  Real-time interaction, remote collaborations and web interface communication methods are gradually becoming more common.  OpenAgua\u2019s platform is designed to target these communication approach. With OpenAgua, multiple users can share and work in one or more networks.  These feature provide a flexible and transparent tool for water managers, stakeholders, citizens, researchers etc. Moreover, different levels of access can be assigned to the networks, this ensures developers to allow collaborators certain privileges such as edit or just read. With this feature, users will get involved and be potential contributors to other existing projects. Furthermore, they will be able to find popular and trending or starred projects.  Flexible computing  Flexible computing is another essential part of OpenAgua. Based on Internet-connected servers, OpenAgua may be downloaded/installed locally or used directly online at  OpenAgua web page  to leverage the power of cloud computing. This enables dynamism, scalability and plasticity to users\u2019 projects.  Security  Standard website data security best practices ensure that your data is protected. OpenAgua has employed a tiered ownership system. The user is able to have restrictions and control who has access to your networks and projects as well as the level of permission they have  Open Source  The OpenAgua software is open source and mostly free (some optional functions require a license). Open Source software lie on the practice of granting wide range of rights to users. OpenAgua is determined to engage innovation and development throughout the contributions of water management social figures. Benefits on letting actors of knowledge and learning, to compute processes and products, are sources of innovation on the water field.  The fact that users\u2019 needs and approaches to target problems are in constant change, open source softwares enables the opportunity to evolve by the constant developing of prototype code innovations. For instance, the user\u2019s community of OpenAgua can freely make improvements and innovate codes on the platform or in their networks. The source code of OpenAgua is written in Python and it can be checked out on GitHub.  While the main functionality of OpenAgua is free, some additional useful features require a license to use. These features are disabled by default, but can be enabled, and are available in the paid version of OpenAgua.org.",
            "title": "Main Features"
        },
        {
            "location": "/#core-technologies",
            "text": "Core technologies used to configure OpenAgua are a mix of open source libraries. This will enable the platform to be in constant improvement and evolution. We thank the thousands of developers out there for all of these!  Data Management  To start and as mention above, data management in OpenAgua is built on  Hydra Platform  a network-based data management platform.  Web stack (front-end and back-end)  Like any interactive, data-driven web-based application, OpenAgua uses a mix of front-end (client) and back-end (server) technologies, with data processing occuring both client-side and server-side. The front-end user interface is developed with  Bootstrap , one of the most widely-used front-end web application frameworks, combined with custom HTML, CSS, and JavaScript. Many JavaScript libraries are used for website interactivity, including  jQuery ,  Lodash , and others.  The back-end is built with  Flask , a \"microframework for Python based on Werkzeug, Jinja 2 and good intentions\". This means that server-side website actions are written in Python, enabling easy development. Server-side work includes serving individual webpages and interactions with Hydra Platform, among other various functions. Numerous Python packages are used for server-side data processing.  Modeling  The default hydroeconomic model used by OpenAgua is written using  Pyomo , a Python package used to formulate and solve optimization models.  GLPK  is the linear programming solver used by the default hydroeconomic model.",
            "title": "Core Technologies"
        },
        {
            "location": "/user-guide/about-this-guide/",
            "text": "About this guide\n\u00b6\n\n\nPurpose\n\u00b6\n\n\nThe purpose of this user guide is to:\n\n\n\n\nHelp get started modeling right away\n\n\nDescribe key concepts that underpin the data organization and modeling principles used by OpenAgua.\n\n\nDescribe how to use specific application features.\n\n\n\n\nThis guide is primarily targeted toward the application user who does not want to customize the underlying code. However, the \nUnder-the-hood\n section provides some tips for advanced tinkerers.\n\n\nOrganization\n\u00b6\n\n\nThese are organized generally as:\n\n\n\n\nGet started\n\n\nWater allocation logic\n\n\nSet up the model\n\n\nEdit the network(s)\n\n\nDefine options & scenarios\n\n\nInput data\n\n\nRun the model\n\n\nView results\n\n\nExport data\n\n\nUnder-the-hood\n\n\nGlossary",
            "title": "About this guide"
        },
        {
            "location": "/user-guide/about-this-guide/#about-this-guide",
            "text": "",
            "title": "About this guide"
        },
        {
            "location": "/user-guide/about-this-guide/#purpose",
            "text": "The purpose of this user guide is to:   Help get started modeling right away  Describe key concepts that underpin the data organization and modeling principles used by OpenAgua.  Describe how to use specific application features.   This guide is primarily targeted toward the application user who does not want to customize the underlying code. However, the  Under-the-hood  section provides some tips for advanced tinkerers.",
            "title": "Purpose"
        },
        {
            "location": "/user-guide/about-this-guide/#organization",
            "text": "These are organized generally as:   Get started  Water allocation logic  Set up the model  Edit the network(s)  Define options & scenarios  Input data  Run the model  View results  Export data  Under-the-hood  Glossary",
            "title": "Organization"
        },
        {
            "location": "/user-guide/getting-started/",
            "text": "Getting started\n\u00b6\n\n\nOrientation\n\u00b6\n\n\nAll the projects and networks are stored in the library called \nHome\n. In here, the user will be able to create new networks and arrange them by the user's preferences. Networks can be shared, edited, exported, deleted and cleaned.\n\n\nModeling process overview\n\u00b6\n\n\nQuick start\n\u00b6\n\n\nOnce you are logged-in, click \"add network\" in order to start building your project. A window will pop up so you can name and describe your project. Each network can have different versions where you will be able to switch within without loosing any data, we recommend selecting the latest version and looking at the \"version history\" link before modifying the template. This feature will function in later versions of OpenAgua.\n\n\nOnce your network is set you can start building it by clicking OVERVIEW, also a drop-down menu is shown at the upper right where sharing and editing functions are available.",
            "title": "Quick start"
        },
        {
            "location": "/user-guide/getting-started/#getting-started",
            "text": "",
            "title": "Getting started"
        },
        {
            "location": "/user-guide/getting-started/#orientation",
            "text": "All the projects and networks are stored in the library called  Home . In here, the user will be able to create new networks and arrange them by the user's preferences. Networks can be shared, edited, exported, deleted and cleaned.",
            "title": "Orientation"
        },
        {
            "location": "/user-guide/getting-started/#modeling-process-overview",
            "text": "",
            "title": "Modeling process overview"
        },
        {
            "location": "/user-guide/getting-started/#quick-start",
            "text": "Once you are logged-in, click \"add network\" in order to start building your project. A window will pop up so you can name and describe your project. Each network can have different versions where you will be able to switch within without loosing any data, we recommend selecting the latest version and looking at the \"version history\" link before modifying the template. This feature will function in later versions of OpenAgua.  Once your network is set you can start building it by clicking OVERVIEW, also a drop-down menu is shown at the upper right where sharing and editing functions are available.",
            "title": "Quick start"
        },
        {
            "location": "/user-guide/key-concepts/",
            "text": "Key Concepts\n\u00b6\n\n\nData organization\n\u00b6\n\n\nOpenAgua builds on the data organizing scheme defined by Hydra Platform, whereby:\n- water system model components are grouped into networks, which are further grouped into projects, and\n- data is grouped into scenarios.\nOpenAgua extends this functionality by adding \nstudies\n, which consist of any arbitrary combination of network and scenarios. These are described below.\n\n\nProject & networks\n\u00b6\n\n\nIn Hydra Platform, a \nnetwork\n is a user-created collection of nodes (e.g., reservoirs and demand sites) connected to each other by links (e.g., rivers and conveyances). A \nproject\n is a collection of one or more networks; a network may belong to only one project.\n\n\nAll the projects and networks are stored in the library called \nHome\n. In here, the user will be yable to create new networks and arrange them by the user's preferences. Networks can be shared, edited, exported, deleted and cleaned.\n\n\nNetwork templates\n\u00b6\n\n\nIn OpenAgua, a \"template\" is a definition of the overall structure of a network. Specifically, a template defines the \nkinds\n of resources (nodes, links, and global resources) and attributes (i.e., constants and variables) that a network may have. For example, a template would indicate that there is a node type called \"reservoir\" and link type called \"river\". The template would then further indicate that, for example, a reservoir has a \"capacity\" and an \"inactive zone\".\n\n\nThe user does not need to deal with templates to get started with OpenAgua. However, as a model becomes more sophisticated, or if the core modeling logic is changed, OpenAgua comes with a \ntemplate editor\n, which may then be applied to a new or existing network as \ndescribed here\n.\n\n\nTemplates are matched with models: a template should describe (at least) the input and output expected by a core model. A network defined by a particular template may be used by one ore more models. A model might also use more than one template, but this might be more restrictive, as a model's input requirements are typically fixed; any variation on a template would need to consider this.\n\n\nFor each resource type (node, link, network), a template defines the name, icon to be used (nodes) or line style (links), as well as attributes. In the case of the \"network\" (i.e., the network as a whole, not specific nodes and links), \"resources\" may be added to represent arbitrary groupings of global attributes for the network.\n\n\nFor each attribute (variable), a template further defines:\n\n Data type (\nscalar\n, \ntimeseries\n, etc.),\n\n Dimension (\nvolume\n, \nflow rate\n, etc.),\n\n Units (\ncubic meters\n, \ncubic meters per second\n, etc.), and\n\n Scope (whether or not the attribute is an input or output).\n\n\nScenarios\n\u00b6",
            "title": "Key concepts"
        },
        {
            "location": "/user-guide/key-concepts/#key-concepts",
            "text": "",
            "title": "Key Concepts"
        },
        {
            "location": "/user-guide/key-concepts/#data-organization",
            "text": "OpenAgua builds on the data organizing scheme defined by Hydra Platform, whereby:\n- water system model components are grouped into networks, which are further grouped into projects, and\n- data is grouped into scenarios.\nOpenAgua extends this functionality by adding  studies , which consist of any arbitrary combination of network and scenarios. These are described below.",
            "title": "Data organization"
        },
        {
            "location": "/user-guide/key-concepts/#project-networks",
            "text": "In Hydra Platform, a  network  is a user-created collection of nodes (e.g., reservoirs and demand sites) connected to each other by links (e.g., rivers and conveyances). A  project  is a collection of one or more networks; a network may belong to only one project.  All the projects and networks are stored in the library called  Home . In here, the user will be yable to create new networks and arrange them by the user's preferences. Networks can be shared, edited, exported, deleted and cleaned.",
            "title": "Project &amp; networks"
        },
        {
            "location": "/user-guide/key-concepts/#network-templates",
            "text": "In OpenAgua, a \"template\" is a definition of the overall structure of a network. Specifically, a template defines the  kinds  of resources (nodes, links, and global resources) and attributes (i.e., constants and variables) that a network may have. For example, a template would indicate that there is a node type called \"reservoir\" and link type called \"river\". The template would then further indicate that, for example, a reservoir has a \"capacity\" and an \"inactive zone\".  The user does not need to deal with templates to get started with OpenAgua. However, as a model becomes more sophisticated, or if the core modeling logic is changed, OpenAgua comes with a  template editor , which may then be applied to a new or existing network as  described here .  Templates are matched with models: a template should describe (at least) the input and output expected by a core model. A network defined by a particular template may be used by one ore more models. A model might also use more than one template, but this might be more restrictive, as a model's input requirements are typically fixed; any variation on a template would need to consider this.  For each resource type (node, link, network), a template defines the name, icon to be used (nodes) or line style (links), as well as attributes. In the case of the \"network\" (i.e., the network as a whole, not specific nodes and links), \"resources\" may be added to represent arbitrary groupings of global attributes for the network.  For each attribute (variable), a template further defines:  Data type ( scalar ,  timeseries , etc.),  Dimension ( volume ,  flow rate , etc.),  Units ( cubic meters ,  cubic meters per second , etc.), and  Scope (whether or not the attribute is an input or output).",
            "title": "Network templates"
        },
        {
            "location": "/user-guide/key-concepts/#scenarios",
            "text": "",
            "title": "Scenarios"
        },
        {
            "location": "/user-guide/modeling-logic/",
            "text": "Modeling logic\n\u00b6\n\n\nWater allocation logic\n\u00b6\n\n\n[Documentation forthcoming]\n\n\nElements of the schematic model\n\u00b6\n\n\nDemand Sites\n\n\nCatchments\n\n\nMiscellaneous Sources and Reservoirs\n\n\nRivers, Diversions and Conveyance\n\n\nDelivery Link and Return Flow",
            "title": "Modeling logic"
        },
        {
            "location": "/user-guide/modeling-logic/#modeling-logic",
            "text": "",
            "title": "Modeling logic"
        },
        {
            "location": "/user-guide/modeling-logic/#water-allocation-logic",
            "text": "[Documentation forthcoming]",
            "title": "Water allocation logic"
        },
        {
            "location": "/user-guide/modeling-logic/#elements-of-the-schematic-model",
            "text": "Demand Sites  Catchments  Miscellaneous Sources and Reservoirs  Rivers, Diversions and Conveyance  Delivery Link and Return Flow",
            "title": "Elements of the schematic model"
        },
        {
            "location": "/user-guide/setting-up-model/",
            "text": "Setting up a new model\n\u00b6\n\n\nThis describes how to create and set up up a model. This assumes you have read \nKey Concepts\n and that you have successfully created an account and logged on.\n\n\nCreate/edit projects\n\u00b6\n\n\nCreate a project\n\u00b6\n\n\nTo create a project, which will contain one or more network, click \u2018Add Project\u2019 from the HOME area.\n\n\nEdit a project\n\u00b6\n\n\nDelete a project\n\u00b6\n\n\nDefine the model template\n\u00b6\n\n\nOverview\n\u00b6\n\n\nFor an overview of templates, please see \nGetting Started\n.\n\n\nThe template facility enables you to view \"official\" (built-in) templates and create/modify additional templates. Official templates may be \"forked\" to create a copy which may then be edited.\n\n\nGetting there\n\u00b6\n\n\nTo get to the template viewer/editor, go to \nWrench\n -> \nTemplates\n.\n\n\nUsage\n\u00b6\n\n\nFork an official template\n\u00b6\n\n\nTo fork an official template:\n\n\n\n\nRight click the template and click \"fork\". The template will be copied to \"My templates\", where you may edit the forked template.\n\n\n\n\nEdit a template\n\u00b6\n\n\nTo edit in \"My templates\":\n[documentation forthcoming]\n\n\nCaveats\n\u00b6\n\n\n\n\nThe template editor is not totally smooth. For example, sometimes tabs don't render right away, such that you have to click on another then come back to the desired tab; this is a problem with the underlying framework, which will be fixed some day.\n\n\nThe editor is not totally functional. For example, you cannot currently change the icons, or apply units universally (e.g., specify that all flow rates are in m3/s). These core and other features will be added.\n\n\nChanging units does not yet change units in the core model. So changing units has no effect on the units that you should provide to the model.\n\n\n\n\nCreate/edit networks\n\u00b6\n\n\nCreate network\n\u00b6\n\n\nOnce logged-in, click \"add network\" in order to start building your project. A window will pop up so you can name and describe your project. Each network can have different versions where you will be able to switch within without loosing any data, we recommend selecting the latest version and looking at the \"version history\" link before modifying the template. This feature will function in later versions of OpenAgua.\n\n\nEdit network properties\n\u00b6\n\n\nEdit network contents\n\u00b6\n\n\nOnce your network is created, you can start creating and editing specific features (rivers, dams, etc.) by clicking 'OPEN', which appears over the network's thumbnail.",
            "title": "Setting up a model"
        },
        {
            "location": "/user-guide/setting-up-model/#setting-up-a-new-model",
            "text": "This describes how to create and set up up a model. This assumes you have read  Key Concepts  and that you have successfully created an account and logged on.",
            "title": "Setting up a new model"
        },
        {
            "location": "/user-guide/setting-up-model/#createedit-projects",
            "text": "",
            "title": "Create/edit projects"
        },
        {
            "location": "/user-guide/setting-up-model/#create-a-project",
            "text": "To create a project, which will contain one or more network, click \u2018Add Project\u2019 from the HOME area.",
            "title": "Create a project"
        },
        {
            "location": "/user-guide/setting-up-model/#edit-a-project",
            "text": "",
            "title": "Edit a project"
        },
        {
            "location": "/user-guide/setting-up-model/#delete-a-project",
            "text": "",
            "title": "Delete a project"
        },
        {
            "location": "/user-guide/setting-up-model/#define-the-model-template",
            "text": "",
            "title": "Define the model template"
        },
        {
            "location": "/user-guide/setting-up-model/#overview",
            "text": "For an overview of templates, please see  Getting Started .  The template facility enables you to view \"official\" (built-in) templates and create/modify additional templates. Official templates may be \"forked\" to create a copy which may then be edited.",
            "title": "Overview"
        },
        {
            "location": "/user-guide/setting-up-model/#getting-there",
            "text": "To get to the template viewer/editor, go to  Wrench  ->  Templates .",
            "title": "Getting there"
        },
        {
            "location": "/user-guide/setting-up-model/#usage",
            "text": "",
            "title": "Usage"
        },
        {
            "location": "/user-guide/setting-up-model/#fork-an-official-template",
            "text": "To fork an official template:   Right click the template and click \"fork\". The template will be copied to \"My templates\", where you may edit the forked template.",
            "title": "Fork an official template"
        },
        {
            "location": "/user-guide/setting-up-model/#edit-a-template",
            "text": "To edit in \"My templates\":\n[documentation forthcoming]",
            "title": "Edit a template"
        },
        {
            "location": "/user-guide/setting-up-model/#caveats",
            "text": "The template editor is not totally smooth. For example, sometimes tabs don't render right away, such that you have to click on another then come back to the desired tab; this is a problem with the underlying framework, which will be fixed some day.  The editor is not totally functional. For example, you cannot currently change the icons, or apply units universally (e.g., specify that all flow rates are in m3/s). These core and other features will be added.  Changing units does not yet change units in the core model. So changing units has no effect on the units that you should provide to the model.",
            "title": "Caveats"
        },
        {
            "location": "/user-guide/setting-up-model/#createedit-networks",
            "text": "",
            "title": "Create/edit networks"
        },
        {
            "location": "/user-guide/setting-up-model/#create-network",
            "text": "Once logged-in, click \"add network\" in order to start building your project. A window will pop up so you can name and describe your project. Each network can have different versions where you will be able to switch within without loosing any data, we recommend selecting the latest version and looking at the \"version history\" link before modifying the template. This feature will function in later versions of OpenAgua.",
            "title": "Create network"
        },
        {
            "location": "/user-guide/setting-up-model/#edit-network-properties",
            "text": "",
            "title": "Edit network properties"
        },
        {
            "location": "/user-guide/setting-up-model/#edit-network-contents",
            "text": "Once your network is created, you can start creating and editing specific features (rivers, dams, etc.) by clicking 'OPEN', which appears over the network's thumbnail.",
            "title": "Edit network contents"
        },
        {
            "location": "/user-guide/creating-network/",
            "text": "Create a network\n\u00b6\n\n\nEdit a network\n\u00b6\n\n\nThe spatial representation of a water system developed in the \nNetwork Editor\n. The Network Editor section is destined to construct your model in a schematic view. In here, the graphical interface will help the user to visualize and comprenhend its project in form of the physical relationship between demand and supply nodes as well as their connection among them.\n\n\nTo begin, start by selecting the geographic area of your project. There are a set of different map types (light, terrain, satellite, etc.) located on the right side of your map, pick the one that best suit your project.  On top of the list, there is a \"go to my location\" button, by clicking it, the map will display the current location of the user. Zoom in and out are features identified by the plus (+) and minus (-) icons, these may help you to select a very specific location of the network. However if the user prefers a simplistic schematic model there is a -No based Map- element on the list of maps.\n\n\nBasemaps of OpenAgua are high-resolution imagery maps which can be added to the network. A list of useful maps is located at the right side of the Network Editor; topographic, satellite, street maps, terrain etc. are some of the most useful maps.\n\n\nOnce you set the area, start adding nodes and links. To set a point or a node: Click on the marker and place it on the map, a feature window will appear and here you have to select the type of feature, name and description. To set a link/river/conveyance: Click on the line icon located at the top left of your map, then click anywhere in the map to start building your polyline, do a double-click on the last point to finish your polyline or simply press finish on the right side of the line icon.\n\n\nYou are also able to edit the schematic location of points and polylines just click the edit icon at the top left of the map and move your nodes and links freely then save any changes.  On the other side if you want to edit the nature of any node or link, do a right click on it and you will be able to: see the coordinates of the feature and center the data there. Moreover you will be able to delete, edit the name/description and data of the feature.\n\n\nThe Network Editor section is destined to construct your model in a schematic view. First zoom in to select the geographic area of your project. There are a set of different map types (light, terrain, satellite, etc.) on the right side of your map, pick the one that best suit your project.\n\n\nOnce you set the area, start adding nodes and links. To set a point or a node: Click on the marker and place it on the map, a feature window will appear and here you have to select the type of feature, name and description. To set a link/river/conveyance: Click on the line icon located at the top left of your map, then click anywhere in the map to start building your polyline, do a double-click on the last point to finish your polyline or simply press finish on the right side of the line icon.\n\n\nYou are also able to edit the schematic location of points and polylines just click the edit icon at the top left of the map and move your nodes and links freely then save any changes. It is important to know that every polyline is managed as an independent link (we have to discuss this part). On the other side if you want to edit the nature of any node or link, do a right click on it and you will be able to: see the coordinates of the feature and center the data there. Moreover you will be able to delete, edit the name/description and data of the feature.",
            "title": "Creating a network"
        },
        {
            "location": "/user-guide/creating-network/#create-a-network",
            "text": "",
            "title": "Create a network"
        },
        {
            "location": "/user-guide/creating-network/#edit-a-network",
            "text": "The spatial representation of a water system developed in the  Network Editor . The Network Editor section is destined to construct your model in a schematic view. In here, the graphical interface will help the user to visualize and comprenhend its project in form of the physical relationship between demand and supply nodes as well as their connection among them.  To begin, start by selecting the geographic area of your project. There are a set of different map types (light, terrain, satellite, etc.) located on the right side of your map, pick the one that best suit your project.  On top of the list, there is a \"go to my location\" button, by clicking it, the map will display the current location of the user. Zoom in and out are features identified by the plus (+) and minus (-) icons, these may help you to select a very specific location of the network. However if the user prefers a simplistic schematic model there is a -No based Map- element on the list of maps.  Basemaps of OpenAgua are high-resolution imagery maps which can be added to the network. A list of useful maps is located at the right side of the Network Editor; topographic, satellite, street maps, terrain etc. are some of the most useful maps.  Once you set the area, start adding nodes and links. To set a point or a node: Click on the marker and place it on the map, a feature window will appear and here you have to select the type of feature, name and description. To set a link/river/conveyance: Click on the line icon located at the top left of your map, then click anywhere in the map to start building your polyline, do a double-click on the last point to finish your polyline or simply press finish on the right side of the line icon.  You are also able to edit the schematic location of points and polylines just click the edit icon at the top left of the map and move your nodes and links freely then save any changes.  On the other side if you want to edit the nature of any node or link, do a right click on it and you will be able to: see the coordinates of the feature and center the data there. Moreover you will be able to delete, edit the name/description and data of the feature.  The Network Editor section is destined to construct your model in a schematic view. First zoom in to select the geographic area of your project. There are a set of different map types (light, terrain, satellite, etc.) on the right side of your map, pick the one that best suit your project.  Once you set the area, start adding nodes and links. To set a point or a node: Click on the marker and place it on the map, a feature window will appear and here you have to select the type of feature, name and description. To set a link/river/conveyance: Click on the line icon located at the top left of your map, then click anywhere in the map to start building your polyline, do a double-click on the last point to finish your polyline or simply press finish on the right side of the line icon.  You are also able to edit the schematic location of points and polylines just click the edit icon at the top left of the map and move your nodes and links freely then save any changes. It is important to know that every polyline is managed as an independent link (we have to discuss this part). On the other side if you want to edit the nature of any node or link, do a right click on it and you will be able to: see the coordinates of the feature and center the data there. Moreover you will be able to delete, edit the name/description and data of the feature.",
            "title": "Edit a network"
        },
        {
            "location": "/user-guide/creating-scenarios/",
            "text": "[Under construction]",
            "title": "Creating scenarios"
        },
        {
            "location": "/user-guide/entering-data/",
            "text": "Entering Data\n\u00b6\n\n\nTwo tools are provided for entering data. First, the \nSingle Data Editor\n allows input of data on a per-scenario, per-resource, per-variable basis. In contrast, the \nMulti Data Editor\n allows input for multiple scenarios/resources/variables at once, using a pivot table-style input mechanism. The Single Data Editor allows for advanced custom input. The main utility of the Multi Data Editor is to copy-paste multiple time series data at once.\n\n\nSingle Data Editor\n\u00b6\n\n\nThe basic data editor consists of three areas:\n\n\n\n\nResource & scenario selector\n\n\nVariable selector\n\n\nData input\n\n\nData preview\n\n\n\n\nResource & scenario selector\n\u00b6\n\n\nVariable selector\n\u00b6\n\n\nData input\n\u00b6\n\n\nPython code is entered here. This code is evaluated using the evaluate function found in evaluator.py. Essentially, a string representation of a function is created, with the entered code as the body of the function. All lines are indented appropriately as needed for Python. The function is then called by the evaluator and assigned to a variable. The function is run once per time step.\n\n\nThe last line of the user-entered code is automatically prepended with \"return \", such that the user doesn't need to. This is most useful for simple cases, such as a constant value:\n\n\n5\n\n\n\n\nHowever, the evaluator also automatically detects the presence of a \"return \" in the last line, such that the user may also include a return as desired. So \nreturn x\n on the last line is the same as \nx\n. In many cases, including \nreturn\n is simply a matter of personal preference. But this is particularly useful if a return is nested in the last part of a conditional statement. To demonstrate, the following three versions of code input yield the exact same result when evaluated:\n\n\nif date.month in [6,7,8]:\n    x = 0.5\nelse:\n    x = 1\nx\n\n\n\n\nif date.month in [6,7,8]:\n    x = 0.5\nelse:\n    x = 1\nreturn x\n\n\n\n\nif date.month in [6,7,8]:\n    return 0.5\nelse:\n    return 1\n\n\n\n\nThis scheme enables the user to import, enter custom functions directly into the code, etc. In the future, this will also enable offering a range of custom Python functions (Check \nWriting Functions\n). It will also allow the user to create, store, re-use, and share custom functions.\n\n\nThe last three examples above should raise a question: where does \"date\" come from? OpenAgua will include several built-in variables available for use. For now, this only includes the date of the function call. In the future, however, this will expand to include others as needed.\n\n\nData preview\n\u00b6\n\n\nMulti Data editor\n\u00b6\n\n\nThe advanced data editor is a powerful tool to input data, it is based on using a pivot table to arrange all data and information. By using pivot tables, this editor gives the user flexibility and analytical skills resulting on well-organized source data.\n\n\nTo start using the advanced data editor first identify the filters bar and select the feature, variable and scenario. In here the user is able to select more than one data to edit. Click Load to boot your pivot table. Start dragging features to the row and column bank. Notice there is a drop down menu of aggregators, by using this, data is set to be original, average or a sum. Arrange your table as you prefer and start filling it either manually or by copy-paste from another data sheet. There is an extra button called Block, this allows to add columns to every feature of the table which might be useful for adding more data to specific variables. The user is able to make as many pivot tables as it like, just save your set up and open it at any time.\n\n\nThe key limitation of this pivot table is it may become unstable or unusable after 100,000 rows of data. If you reach the limit you will be warned to use the filter at the top to help reduce the amount of data retrieved from the server. This filter enables you to select more specific data based on an arrange of filter criteria including feature type and variable.\n\n\nTo know more about pivot tables look at UI Tutorial (https://github.com/nicolaskruchten/pivottable/wiki/UI-Tutorial)",
            "title": "Entering data"
        },
        {
            "location": "/user-guide/entering-data/#entering-data",
            "text": "Two tools are provided for entering data. First, the  Single Data Editor  allows input of data on a per-scenario, per-resource, per-variable basis. In contrast, the  Multi Data Editor  allows input for multiple scenarios/resources/variables at once, using a pivot table-style input mechanism. The Single Data Editor allows for advanced custom input. The main utility of the Multi Data Editor is to copy-paste multiple time series data at once.",
            "title": "Entering Data"
        },
        {
            "location": "/user-guide/entering-data/#single-data-editor",
            "text": "The basic data editor consists of three areas:   Resource & scenario selector  Variable selector  Data input  Data preview",
            "title": "Single Data Editor"
        },
        {
            "location": "/user-guide/entering-data/#resource-scenario-selector",
            "text": "",
            "title": "Resource &amp; scenario selector"
        },
        {
            "location": "/user-guide/entering-data/#variable-selector",
            "text": "",
            "title": "Variable selector"
        },
        {
            "location": "/user-guide/entering-data/#data-input",
            "text": "Python code is entered here. This code is evaluated using the evaluate function found in evaluator.py. Essentially, a string representation of a function is created, with the entered code as the body of the function. All lines are indented appropriately as needed for Python. The function is then called by the evaluator and assigned to a variable. The function is run once per time step.  The last line of the user-entered code is automatically prepended with \"return \", such that the user doesn't need to. This is most useful for simple cases, such as a constant value:  5  However, the evaluator also automatically detects the presence of a \"return \" in the last line, such that the user may also include a return as desired. So  return x  on the last line is the same as  x . In many cases, including  return  is simply a matter of personal preference. But this is particularly useful if a return is nested in the last part of a conditional statement. To demonstrate, the following three versions of code input yield the exact same result when evaluated:  if date.month in [6,7,8]:\n    x = 0.5\nelse:\n    x = 1\nx  if date.month in [6,7,8]:\n    x = 0.5\nelse:\n    x = 1\nreturn x  if date.month in [6,7,8]:\n    return 0.5\nelse:\n    return 1  This scheme enables the user to import, enter custom functions directly into the code, etc. In the future, this will also enable offering a range of custom Python functions (Check  Writing Functions ). It will also allow the user to create, store, re-use, and share custom functions.  The last three examples above should raise a question: where does \"date\" come from? OpenAgua will include several built-in variables available for use. For now, this only includes the date of the function call. In the future, however, this will expand to include others as needed.",
            "title": "Data input"
        },
        {
            "location": "/user-guide/entering-data/#data-preview",
            "text": "",
            "title": "Data preview"
        },
        {
            "location": "/user-guide/entering-data/#multi-data-editor",
            "text": "The advanced data editor is a powerful tool to input data, it is based on using a pivot table to arrange all data and information. By using pivot tables, this editor gives the user flexibility and analytical skills resulting on well-organized source data.  To start using the advanced data editor first identify the filters bar and select the feature, variable and scenario. In here the user is able to select more than one data to edit. Click Load to boot your pivot table. Start dragging features to the row and column bank. Notice there is a drop down menu of aggregators, by using this, data is set to be original, average or a sum. Arrange your table as you prefer and start filling it either manually or by copy-paste from another data sheet. There is an extra button called Block, this allows to add columns to every feature of the table which might be useful for adding more data to specific variables. The user is able to make as many pivot tables as it like, just save your set up and open it at any time.  The key limitation of this pivot table is it may become unstable or unusable after 100,000 rows of data. If you reach the limit you will be warned to use the filter at the top to help reduce the amount of data retrieved from the server. This filter enables you to select more specific data based on an arrange of filter criteria including feature type and variable.  To know more about pivot tables look at UI Tutorial (https://github.com/nicolaskruchten/pivottable/wiki/UI-Tutorial)",
            "title": "Multi Data editor"
        },
        {
            "location": "/user-guide/running-models/",
            "text": "Running Models\n\u00b6\n\n\nModel Dashboard\n\u00b6\n\n\nThe \nModel Dashboard\n enables you to run models for one or more scenarios. Once the model is run, progress will be reported in one or more progress bars. Additionally, more detailed information about both, the model run as a whole and about each specific scenario run is shown.  The main log information is always shown providing feedback including the parameters used in the current model run (e.g. time span, level foresight, scenario ids, solver etc.) and the general status of the model run.\n\n\nThe Scenario log is shown by clicking the view log button next to the progress bar. It provides text updates about the model run. Additionally, it provides limited information from Pyomo about the optimization problem (e.g. number of objectives, constraints, variables etc.) Importantly this information also includes the status of the problem after the model run including specifically the termination condition. Termination conditions could include optimal, infeasible and many others (see http://www.pyomo.org/blog/2015/1/8/accessing-solver).\n\n\nDuring the run, the modeling can be stopped by clicking Stop model.",
            "title": "Running models"
        },
        {
            "location": "/user-guide/running-models/#running-models",
            "text": "",
            "title": "Running Models"
        },
        {
            "location": "/user-guide/running-models/#model-dashboard",
            "text": "The  Model Dashboard  enables you to run models for one or more scenarios. Once the model is run, progress will be reported in one or more progress bars. Additionally, more detailed information about both, the model run as a whole and about each specific scenario run is shown.  The main log information is always shown providing feedback including the parameters used in the current model run (e.g. time span, level foresight, scenario ids, solver etc.) and the general status of the model run.  The Scenario log is shown by clicking the view log button next to the progress bar. It provides text updates about the model run. Additionally, it provides limited information from Pyomo about the optimization problem (e.g. number of objectives, constraints, variables etc.) Importantly this information also includes the status of the problem after the model run including specifically the termination condition. Termination conditions could include optimal, infeasible and many others (see http://www.pyomo.org/blog/2015/1/8/accessing-solver).  During the run, the modeling can be stopped by clicking Stop model.",
            "title": "Model Dashboard"
        },
        {
            "location": "/user-guide/viewing-results/",
            "text": "Results\n\u00b6\n\n\nResults Explorer / Chart maker\n\u00b6\n\n\nThe results explorer consists of:\n\n\n\n\n\n\nA suite of pivot tables and charts\n\n\n\n\n\n\nOptions to change the plot renderer (Plotly and Google Charts)\n\n\n\n\n\n\nOptions to filter the data from the server.\n\n\n\n\n\n\nThe ability to save charts for later viewing and editing.\n\n\n\n\n\n\nFirst, select in the filters bar the feature or variables and click load. Then select which kind of plot you prefer from the suit of charts and tables at the drop down menu. Select the type of aggregator and then start building your results pivot table.\n\n\nTo add dynamism, there are two render options in which the user is able to see and edit their results: Plotly and Google charts. Both are online analytics and data visualization tools, find this option on the drop down menu located at the top left corner then select the most adequate for your project. If you want to change from one render to another remember to click Load after switching this option.\n\n\nPlotly:\n By hovering the pointer on the chart, an edit menu will appear at the right corner of your plot. Here you will be able download your result, zoom in and out, edit etc. If you choose to edit your plot, it will automatically take you to the plotly site where you will be able to style and analyze it with several statistical tests.\n\n\nNote: To create a scatter chart the filter should be used to select more specific data.\n\n\nMy Charts or Chart Collection\n\u00b6\n\n\nThe chart collection contains all the saved graphs and plots from the results explorer window. By clicking View on the image, a slide show will display the selected image. If there are some changes to be performed, simply click edit and this command will take the saved result into the Results Explorer window in order to perform any modification.",
            "title": "Viewing results"
        },
        {
            "location": "/user-guide/viewing-results/#results",
            "text": "",
            "title": "Results"
        },
        {
            "location": "/user-guide/viewing-results/#results-explorer-chart-maker",
            "text": "The results explorer consists of:    A suite of pivot tables and charts    Options to change the plot renderer (Plotly and Google Charts)    Options to filter the data from the server.    The ability to save charts for later viewing and editing.    First, select in the filters bar the feature or variables and click load. Then select which kind of plot you prefer from the suit of charts and tables at the drop down menu. Select the type of aggregator and then start building your results pivot table.  To add dynamism, there are two render options in which the user is able to see and edit their results: Plotly and Google charts. Both are online analytics and data visualization tools, find this option on the drop down menu located at the top left corner then select the most adequate for your project. If you want to change from one render to another remember to click Load after switching this option.  Plotly:  By hovering the pointer on the chart, an edit menu will appear at the right corner of your plot. Here you will be able download your result, zoom in and out, edit etc. If you choose to edit your plot, it will automatically take you to the plotly site where you will be able to style and analyze it with several statistical tests.  Note: To create a scatter chart the filter should be used to select more specific data.",
            "title": "Results Explorer / Chart maker"
        },
        {
            "location": "/user-guide/viewing-results/#my-charts-or-chart-collection",
            "text": "The chart collection contains all the saved graphs and plots from the results explorer window. By clicking View on the image, a slide show will display the selected image. If there are some changes to be performed, simply click edit and this command will take the saved result into the Results Explorer window in order to perform any modification.",
            "title": "My Charts or Chart Collection"
        },
        {
            "location": "/user-guide/exporting-data/",
            "text": "[Under construction]",
            "title": "Exporting data"
        },
        {
            "location": "/user-guide/collaboration/",
            "text": "[Under construction]",
            "title": "Sharing & collaboration"
        },
        {
            "location": "/user-guide/advanced-tools/",
            "text": "[Under construction]",
            "title": "Advanced data tools"
        },
        {
            "location": "/user-guide/under-the-hood/",
            "text": "Under-the-hood\n\u00b6\n\n\nThis section offers some tips for advanced users who want to either contribute to development or customize OpenAgua for their own uses.",
            "title": "Under-the-hood"
        },
        {
            "location": "/user-guide/under-the-hood/#under-the-hood",
            "text": "This section offers some tips for advanced users who want to either contribute to development or customize OpenAgua for their own uses.",
            "title": "Under-the-hood"
        },
        {
            "location": "/user-guide/glossary/",
            "text": "Glossary\n\u00b6\n\n\nNodes and Links\n\u00b6\n\n\nDemand Site\n\u00b6\n\n\nA specific location where users require water to enter a delivery or distribution system for whitdrawal service. Demand sites include: Industrial facilities, irrigation or agriculture districs, municipal sectors, ecological flow requirements, hydropower plants etc.\n\n\nSupply Resources\n\nResources that provide water supply for demand sites. A supply system is formed by diverse water bodies like catchments, rivers, aquifers and reservoirs connected by conveyances, delivery links and return flows.\n\n\nCatchments\n\nDefined area or basin where surface water from precipitation, melting snow and ice accumulation gets collected by natural landscape into another water body.\n\n\nReservoirs\n\nAn open storage area where water is collected by a catchment or by artificial transfer of water.\n\n\nMiscellaneous sources\n\nAny other sources that provide water to demand sites it can be unconnected rivers, artificial recharge aquifers, pools etc.\n\n\nRivers and Diversions\n\nNatural flowing watercourse which have a head-flow and an end-flow point. Diversions are nodes that divert water from a river into a canal for example.\n\n\nFlow Requirement\n\nThe minimum amount of water flow in a stream to meet ecological requirements.\n\n\nConveyance\n\nConveyances are delivery links that transport water from a withdrawal node (surface water, miscellaneous water and groundwater) to a demand point.\n\n\nDelivery Link\n\nDistribution or transmission links that deliver water from any supply resources to demand sites.\n\n\nReturn Flow\n\nRepresentation of return flows or unused water from demand sites which are delivered to any water body, irrigation crop or a waste water treatment plant for example.\n\n\nReservoir Elements\n\u00b6\n\n\nPriority\n\nCondition of preference on demand sites to allocate water. Priority ranges from 0, the lowest priority up to \u221e the highest. The demand site with higher priority will have delivered water first, after it fullfill its need, delivery water will be continued to the second highest priority and so on.\n\n\nInitial Storage\n\nThe amount of water initially stored at the beginning of a defined period of time.\n\n\nMaximum Outflow\n\nMaximum amount of water that can be withdrawn, discharge or pumped from a reservoir or aquifer.\n\n\nStorage Capacity\n\nThe total amount of available water capacity in an aquifer or reservoir.\n\n\nConservation Pool\n\nThe reservoir's active storage, this is the volume of water between the inactive pool and the flood control zone. The conservation pool can be released to supply water demands.\n\n\nInactive Pool\n\nThe inactive pool of a reservoir refers to the zone which is normally not drained and it allows sedimentation processes and an ecological area for fish and wildlife.\n\n\nVolume Elevation Curve\n\n Relationship between elevation and volume.\n\n\nLocal Accretions\n\nReservoir sediment accumulation.\n\n\nNet Evaporation\n\nEvaporation rate that occurss in reservoirs after evapotranspiration from natural system and precipitation has occured.\n\n\nUrban Demand\n\u00b6\n\n\nPriority\n\n\nDemand\n\nQuantity of water needed to meet the community's requirements\n\n\nConsumptive Loss\n\nWater that is lost from the system at the time of delivery.\n\n\nHydropower\n\u00b6\n\n\nPriority\n\n\nFlow Capacity\n\n\nFixed Head\n\n\nDemand\n\n\nAgriculture Demand\n\u00b6\n\n\nPriority\n\n\nDemand\n\n\nConsumptive Loss\n\n\nCatchment\n\u00b6\n\n\nRunoff\n\n\nEcological Flow Requirement\n\u00b6\n\n\nPriority\n\n\nMiscelaneous Source\n\u00b6\n\n\nSupply\n\n\nRiver\n\u00b6\n\n\nPriority\n\n\nLocal Accretions\n\n\nNet Evaporation\n\n\nGain from Groundwater\n\n\nLoss to Groundwater\n\n\nReach Length\n\n\nMinimum Flow Requirement\n\n\nDelivery Link\n\u00b6\n\n\nLoss to Groundwater\n\n\nLoss from System\n\n\nFlow Capacity\n\n\nReturn Flow\n\u00b6\n\n\nGain from Groundwater\n\n\nLoss to Groundwater\n\n\nLoss from System\n\n\nConveyance\n\u00b6\n\n\nLoss to Groundwater\n\n\nMinimum Flow Requirement\n\n\nLoss from System\n\n\nFlow Capacity",
            "title": "Glossary"
        },
        {
            "location": "/user-guide/glossary/#glossary",
            "text": "",
            "title": "Glossary"
        },
        {
            "location": "/user-guide/glossary/#nodes-and-links",
            "text": "",
            "title": "Nodes and Links"
        },
        {
            "location": "/user-guide/glossary/#demand-site",
            "text": "A specific location where users require water to enter a delivery or distribution system for whitdrawal service. Demand sites include: Industrial facilities, irrigation or agriculture districs, municipal sectors, ecological flow requirements, hydropower plants etc.  Supply Resources \nResources that provide water supply for demand sites. A supply system is formed by diverse water bodies like catchments, rivers, aquifers and reservoirs connected by conveyances, delivery links and return flows.  Catchments \nDefined area or basin where surface water from precipitation, melting snow and ice accumulation gets collected by natural landscape into another water body.  Reservoirs \nAn open storage area where water is collected by a catchment or by artificial transfer of water.  Miscellaneous sources \nAny other sources that provide water to demand sites it can be unconnected rivers, artificial recharge aquifers, pools etc.  Rivers and Diversions \nNatural flowing watercourse which have a head-flow and an end-flow point. Diversions are nodes that divert water from a river into a canal for example.  Flow Requirement \nThe minimum amount of water flow in a stream to meet ecological requirements.  Conveyance \nConveyances are delivery links that transport water from a withdrawal node (surface water, miscellaneous water and groundwater) to a demand point.  Delivery Link \nDistribution or transmission links that deliver water from any supply resources to demand sites.  Return Flow \nRepresentation of return flows or unused water from demand sites which are delivered to any water body, irrigation crop or a waste water treatment plant for example.",
            "title": "Demand Site"
        },
        {
            "location": "/user-guide/glossary/#reservoir-elements",
            "text": "Priority \nCondition of preference on demand sites to allocate water. Priority ranges from 0, the lowest priority up to \u221e the highest. The demand site with higher priority will have delivered water first, after it fullfill its need, delivery water will be continued to the second highest priority and so on.  Initial Storage \nThe amount of water initially stored at the beginning of a defined period of time.  Maximum Outflow \nMaximum amount of water that can be withdrawn, discharge or pumped from a reservoir or aquifer.  Storage Capacity \nThe total amount of available water capacity in an aquifer or reservoir.  Conservation Pool \nThe reservoir's active storage, this is the volume of water between the inactive pool and the flood control zone. The conservation pool can be released to supply water demands.  Inactive Pool \nThe inactive pool of a reservoir refers to the zone which is normally not drained and it allows sedimentation processes and an ecological area for fish and wildlife.  Volume Elevation Curve \n Relationship between elevation and volume.  Local Accretions \nReservoir sediment accumulation.  Net Evaporation \nEvaporation rate that occurss in reservoirs after evapotranspiration from natural system and precipitation has occured.",
            "title": "Reservoir Elements"
        },
        {
            "location": "/user-guide/glossary/#urban-demand",
            "text": "Priority  Demand \nQuantity of water needed to meet the community's requirements  Consumptive Loss \nWater that is lost from the system at the time of delivery.",
            "title": "Urban Demand"
        },
        {
            "location": "/user-guide/glossary/#hydropower",
            "text": "Priority  Flow Capacity  Fixed Head  Demand",
            "title": "Hydropower"
        },
        {
            "location": "/user-guide/glossary/#agriculture-demand",
            "text": "Priority  Demand  Consumptive Loss",
            "title": "Agriculture Demand"
        },
        {
            "location": "/user-guide/glossary/#catchment",
            "text": "Runoff",
            "title": "Catchment"
        },
        {
            "location": "/user-guide/glossary/#ecological-flow-requirement",
            "text": "Priority",
            "title": "Ecological Flow Requirement"
        },
        {
            "location": "/user-guide/glossary/#miscelaneous-source",
            "text": "Supply",
            "title": "Miscelaneous Source"
        },
        {
            "location": "/user-guide/glossary/#river",
            "text": "Priority  Local Accretions  Net Evaporation  Gain from Groundwater  Loss to Groundwater  Reach Length  Minimum Flow Requirement",
            "title": "River"
        },
        {
            "location": "/user-guide/glossary/#delivery-link",
            "text": "Loss to Groundwater  Loss from System  Flow Capacity",
            "title": "Delivery Link"
        },
        {
            "location": "/user-guide/glossary/#return-flow",
            "text": "Gain from Groundwater  Loss to Groundwater  Loss from System",
            "title": "Return Flow"
        },
        {
            "location": "/user-guide/glossary/#conveyance",
            "text": "Loss to Groundwater  Minimum Flow Requirement  Loss from System  Flow Capacity",
            "title": "Conveyance"
        },
        {
            "location": "/tutorials/tutorial1/",
            "text": "Tutorial 1\n\u00b6\n\n\n\n\nUnder Construction.",
            "title": "Tutorial 1"
        },
        {
            "location": "/tutorials/tutorial1/#tutorial-1",
            "text": "Under Construction.",
            "title": "Tutorial 1"
        },
        {
            "location": "/tutorials/tutorial2/",
            "text": "Tutorial 2\n\u00b6\n\n\n\n\nUnder Construction.",
            "title": "Tutorial 2"
        },
        {
            "location": "/tutorials/tutorial2/#tutorial-2",
            "text": "Under Construction.",
            "title": "Tutorial 2"
        },
        {
            "location": "/faqs/",
            "text": "Frequently Asked Questions\n\u00b6\n\n\n\n\nUnder Construction.",
            "title": "FAQs"
        },
        {
            "location": "/faqs/#frequently-asked-questions",
            "text": "Under Construction.",
            "title": "Frequently Asked Questions"
        },
        {
            "location": "/the-team/",
            "text": "OpenAgua is developed and maintained by a core group of university researchers and funding partners, with development and technical support from many others.\n\n\nInstitutional Partners\n\u00b6\n\n\nUMass Hydrosystems Research Group\n, University of Massachusetts Amherst.\n\n\nCenter for Water for Latin America and the Caribbean\n, Tecnol\u00f3gico de Monterrey.\n\n\nCenter for Watershed Sciences\n, University of California, Davis.\n\n\nCore Team\n\u00b6\n\n\nIn alphabetical order:\n\n\n\n\nCasey Brown, PhD, Hydrosystems Research Group, University of Massachusetts Amherst\n. Dr. Brown helps guide the vision of OpenAgua and helps ensure its continued short-term development in the context of multiple high profile water systems.\n\n\n \nLaura Elisa-Garza, M.S., Center for Water for Latin America and the Caribbean, Tecnol\u00f3gico de Monterrey\n. Laura is leading the study to demonstrate OpenAgua for the city of Monterrey, Mexico, develops content (e.g., documentation) and visual design, and continually tests OpenAgua.\n\n\n \nJosu\u00e9 Medell\u00edn-Azuara, Ph.D.\n, Senior Researcher, Center for Watershed Sciences, University of California, Davis\n. Dr. Medell\u00edn-Azuara is the U.S. co-Principal Investigator for the CITRIS-funded seed project to develop OpenAgua, helping to oversee project organization and coordinate with other related projects.\n\n\n \nAldo Ram\u00edrez-Orozco, Ph.D.\n, Professor, Center for Water for Latin America and the Caribbean, and General Director, N\u00facleo Estrategico de Decisiones (NED), at Tecnol\u00f3gico de Monterrey\n. Dr. Ram\u00edrez is the Mexico co-Principal Investigator for the CITRIS-funded seed project to develop OpenAgua, helping to guide project organization and liaising with funding partners in Mexico.\n\n\n \nDavid Rheinheimer, Ph.D., Post-doctoral Researcher, Hydrosystems Group, University of Massachusetts Amherst\n. Dr. Rheinheimer conceptualized OpenAgua and is involved in all aspects of its development, including vision, strategic planning, project management and technical leadership; to-date, he has been the primary developer of OpenAgua. His primary interests are in developing and leveraging decision support technologies to improve strategic management of water and energy resources.\n\n\n\n\nMichael Zarozinski\n, Senior Software Engineer, College of Information and Computer Sciences, University of Massachusetts Amherst\n. He is a lead designer and implementer of the \"heart and soul\" of OpenAgua, the facility to run and monitor models. Michael is interested in all aspects of artificial intelligence and the art and science of software engineering.\n\n\nIn addition, core development is in close collaboration with others. In particular:\n\n\nStephen Knox, Ph.D., Lead Developer, Water Resources Group, Manchester University\n. Dr. Knox is the lead developer of \nHydra Platform\n, the core data organization framework and web server used by OpenAgua. Steve provides critical support for Hydra Platform and advice on strategic development.\n\n\nFunding Partners\n\u00b6\n\n\nThe OpenAgua team appreciates working with our initial funding partners, for both their financial support and strategic vision.\n\n\nCITRIS and the Banatao Institute\n, University of California\n. CITRIS provided the seed funding for OpenAgua in 2016 under the 2016 joint CITRIS-ITESM seed funding program. Under this program, \"Bi-national research teams in Mexico and California develop promising, early-stage IT projects that can attract larger funding and support resources.\" See the \nanouncement of the award\n.\n\n\nFEMSA Foundation\n. The FEMSA Foundation supports the N\u00facleo Estrategico de Decisiones (Nucleus for Strategic Decisions, or NED) at the Water Center for Latin America at Tecnol\u00f3gico de Monterrey, under which OpenAgua was initiated.\n\n\nInter-American Development Bank (IADB)\n. IADB also supports NED.\n\n\nTecnol\u00f3gico de Monterrey\n. Tecnol\u00f3gico de Monterrey also supports NED, including with physical space.\n\n\nTranslation Team\n\u00b6\n\n\nTranslations (forthcoming) are provided by a dedicated, enthusiastic, and uncompensated, team of already-overworked graduate students or recent graduates. They will be acknowledged once the multilingual capability is fully implemented.\n\n\nThe Open Source Community\n\u00b6\n\n\nOpenAgua uses primarily Open Source software, much of which is highly undervalued by society, yet nonetheless otherwise extremely appreciated. We consider the many thuosands of developers who have contributed to the various technologies used by OpenAgua to be implicitly part of the team. See the list of \ncore technologies\n.",
            "title": "The Team"
        },
        {
            "location": "/the-team/#institutional-partners",
            "text": "UMass Hydrosystems Research Group , University of Massachusetts Amherst.  Center for Water for Latin America and the Caribbean , Tecnol\u00f3gico de Monterrey.  Center for Watershed Sciences , University of California, Davis.",
            "title": "Institutional Partners"
        },
        {
            "location": "/the-team/#core-team",
            "text": "In alphabetical order:   Casey Brown, PhD, Hydrosystems Research Group, University of Massachusetts Amherst . Dr. Brown helps guide the vision of OpenAgua and helps ensure its continued short-term development in the context of multiple high profile water systems.    Laura Elisa-Garza, M.S., Center for Water for Latin America and the Caribbean, Tecnol\u00f3gico de Monterrey . Laura is leading the study to demonstrate OpenAgua for the city of Monterrey, Mexico, develops content (e.g., documentation) and visual design, and continually tests OpenAgua.    Josu\u00e9 Medell\u00edn-Azuara, Ph.D. , Senior Researcher, Center for Watershed Sciences, University of California, Davis . Dr. Medell\u00edn-Azuara is the U.S. co-Principal Investigator for the CITRIS-funded seed project to develop OpenAgua, helping to oversee project organization and coordinate with other related projects.    Aldo Ram\u00edrez-Orozco, Ph.D. , Professor, Center for Water for Latin America and the Caribbean, and General Director, N\u00facleo Estrategico de Decisiones (NED), at Tecnol\u00f3gico de Monterrey . Dr. Ram\u00edrez is the Mexico co-Principal Investigator for the CITRIS-funded seed project to develop OpenAgua, helping to guide project organization and liaising with funding partners in Mexico.    David Rheinheimer, Ph.D., Post-doctoral Researcher, Hydrosystems Group, University of Massachusetts Amherst . Dr. Rheinheimer conceptualized OpenAgua and is involved in all aspects of its development, including vision, strategic planning, project management and technical leadership; to-date, he has been the primary developer of OpenAgua. His primary interests are in developing and leveraging decision support technologies to improve strategic management of water and energy resources.   Michael Zarozinski , Senior Software Engineer, College of Information and Computer Sciences, University of Massachusetts Amherst . He is a lead designer and implementer of the \"heart and soul\" of OpenAgua, the facility to run and monitor models. Michael is interested in all aspects of artificial intelligence and the art and science of software engineering.  In addition, core development is in close collaboration with others. In particular:  Stephen Knox, Ph.D., Lead Developer, Water Resources Group, Manchester University . Dr. Knox is the lead developer of  Hydra Platform , the core data organization framework and web server used by OpenAgua. Steve provides critical support for Hydra Platform and advice on strategic development.",
            "title": "Core Team"
        },
        {
            "location": "/the-team/#funding-partners",
            "text": "The OpenAgua team appreciates working with our initial funding partners, for both their financial support and strategic vision.  CITRIS and the Banatao Institute , University of California . CITRIS provided the seed funding for OpenAgua in 2016 under the 2016 joint CITRIS-ITESM seed funding program. Under this program, \"Bi-national research teams in Mexico and California develop promising, early-stage IT projects that can attract larger funding and support resources.\" See the  anouncement of the award .  FEMSA Foundation . The FEMSA Foundation supports the N\u00facleo Estrategico de Decisiones (Nucleus for Strategic Decisions, or NED) at the Water Center for Latin America at Tecnol\u00f3gico de Monterrey, under which OpenAgua was initiated.  Inter-American Development Bank (IADB) . IADB also supports NED.  Tecnol\u00f3gico de Monterrey . Tecnol\u00f3gico de Monterrey also supports NED, including with physical space.",
            "title": "Funding Partners"
        },
        {
            "location": "/the-team/#translation-team",
            "text": "Translations (forthcoming) are provided by a dedicated, enthusiastic, and uncompensated, team of already-overworked graduate students or recent graduates. They will be acknowledged once the multilingual capability is fully implemented.",
            "title": "Translation Team"
        },
        {
            "location": "/the-team/#the-open-source-community",
            "text": "OpenAgua uses primarily Open Source software, much of which is highly undervalued by society, yet nonetheless otherwise extremely appreciated. We consider the many thuosands of developers who have contributed to the various technologies used by OpenAgua to be implicitly part of the team. See the list of  core technologies .",
            "title": "The Open Source Community"
        },
        {
            "location": "/publications/",
            "text": "Publications\n\u00b6\n\n\n\n\nUnder Construction.",
            "title": "Publications"
        },
        {
            "location": "/publications/#publications",
            "text": "Under Construction.",
            "title": "Publications"
        }
    ]
}